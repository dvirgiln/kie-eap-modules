<?xml version="1.0" encoding="UTF-8"?><project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">  <modelVersion>4.0.0</modelVersion>  <parent>    <artifactId>jboss-parent</artifactId>    <groupId>org.jboss</groupId>    <version>11-redhat-1</version>  </parent>  <groupId>io.netty</groupId>  <artifactId>netty</artifactId>  <version>3.6.9.Final-redhat-1</version>  <packaging>bundle</packaging>  <name>The Netty Project</name>  <description>The Netty project is an effort to provide an asynchronous event-driven    network application framework and tools for rapid development of    maintainable high performance and high scalability protocol servers and    clients.  In other words, Netty is a NIO client server framework which    enables quick and easy development of network applications such as protocol    servers and clients. It greatly simplifies and streamlines network    programming such as TCP and UDP socket server.</description>  <url>http://netty.io/</url>  <inceptionYear>2008</inceptionYear>  <organization>    <name>The Netty Project</name>    <url>http://netty.io/</url>  </organization>  <licenses>    <license>      <name>Apache License, Version 2.0</name>      <url>http://www.apache.org/licenses/LICENSE-2.0</url>    </license>  </licenses>  <developers>    <developer>      <id>netty.io</id>      <name>The Netty Project Contributors</name>      <email>netty@googlegroups.com</email>      <url>http://netty.io/</url>      <organization>The Netty Project</organization>      <organizationUrl>http://netty.io/</organizationUrl>    </developer>  </developers>  <scm>    <connection>scm:git:git://github.com/netty/netty.git</connection>    <developerConnection>scm:git:ssh://git@github.com/netty/netty.git</developerConnection>    <url>https://github.com/netty/netty</url>  </scm>  <properties>    <attach-distribution>false</attach-distribution>    <jboss.marshalling.version>1.3.14.GA</jboss.marshalling.version>  </properties>  <dependencies>    <dependency>      <groupId>org.jboss.marshalling</groupId>      <artifactId>jboss-marshalling</artifactId>      <version>${jboss.marshalling.version}</version>      <scope>compile</scope>      <optional>true</optional>    </dependency>    <dependency>      <groupId>com.google.protobuf</groupId>      <artifactId>protobuf-java</artifactId>      <version>2.5.0</version>      <scope>compile</scope>      <optional>true</optional>    </dependency>    <dependency>      <groupId>javax.servlet</groupId>      <artifactId>servlet-api</artifactId>      <version>2.5</version>      <scope>compile</scope>      <optional>true</optional>    </dependency>    <dependency>      <groupId>javax.activation</groupId>      <artifactId>activation</artifactId>      <version>1.1.1</version>      <scope>compile</scope>      <optional>true</optional>    </dependency>    <dependency>      <groupId>org.apache.felix</groupId>      <artifactId>org.osgi.core</artifactId>      <version>1.4.0</version>      <scope>compile</scope>      <optional>true</optional>    </dependency>    <dependency>      <groupId>org.apache.felix</groupId>      <artifactId>org.osgi.compendium</artifactId>      <version>1.4.0</version>      <scope>compile</scope>      <exclusions>        <exclusion>          <artifactId>javax.servlet</artifactId>          <groupId>org.apache.felix</groupId>        </exclusion>        <exclusion>          <artifactId>org.osgi.foundation</artifactId>          <groupId>org.apache.felix</groupId>        </exclusion>      </exclusions>      <optional>true</optional>    </dependency>    <dependency>      <groupId>org.slf4j</groupId>      <artifactId>slf4j-api</artifactId>      <version>1.6.4</version>      <scope>compile</scope>      <optional>true</optional>    </dependency>    <dependency>      <groupId>commons-logging</groupId>      <artifactId>commons-logging</artifactId>      <version>1.1.1</version>      <scope>compile</scope>      <optional>true</optional>    </dependency>    <dependency>      <groupId>org.jboss.logging</groupId>      <artifactId>jboss-logging</artifactId>      <version>3.1.2.GA</version>      <scope>compile</scope>      <optional>true</optional>    </dependency>    <dependency>      <groupId>log4j</groupId>      <artifactId>log4j</artifactId>      <version>1.2.16</version>      <scope>compile</scope>      <exclusions>        <exclusion>          <artifactId>mail</artifactId>          <groupId>javax.mail</groupId>        </exclusion>        <exclusion>          <artifactId>jms</artifactId>          <groupId>javax.jms</groupId>        </exclusion>        <exclusion>          <artifactId>jmxtools</artifactId>          <groupId>com.sun.jdmk</groupId>        </exclusion>        <exclusion>          <artifactId>jmxri</artifactId>          <groupId>com.sun.jmx</groupId>        </exclusion>      </exclusions>      <optional>true</optional>    </dependency>    <dependency>      <groupId>junit</groupId>      <artifactId>junit</artifactId>      <version>4.10</version>      <scope>test</scope>    </dependency>    <dependency>      <groupId>org.easymock</groupId>      <artifactId>easymock</artifactId>      <version>3.1</version>      <scope>test</scope>    </dependency>    <dependency>      <groupId>org.easymock</groupId>      <artifactId>easymockclassextension</artifactId>      <version>3.1</version>      <scope>test</scope>    </dependency>    <dependency>      <groupId>org.slf4j</groupId>      <artifactId>slf4j-simple</artifactId>      <version>1.6.4</version>      <scope>test</scope>    </dependency>    <dependency>      <groupId>org.jboss.marshalling</groupId>      <artifactId>jboss-marshalling-serial</artifactId>      <version>${jboss.marshalling.version}</version>      <scope>test</scope>    </dependency>    <dependency>      <groupId>org.jboss.marshalling</groupId>      <artifactId>jboss-marshalling-river</artifactId>      <version>${jboss.marshalling.version}</version>      <scope>test</scope>    </dependency>  </dependencies>  <build>    <resources>      <resource>        <directory>${basedir}/src/main/resources</directory>      </resource>      <resource>        <directory>${basedir}/target/license</directory>      </resource>    </resources>    <pluginManagement>      <plugins>        <plugin>          <groupId>org.eclipse.m2e</groupId>          <artifactId>lifecycle-mapping</artifactId>          <configuration>            <lifecycleMappingMetadata>              <pluginExecutions>                <pluginExecution>                  <pluginExecutionFilter>                    <groupId>org.apache.maven.plugins</groupId>                    <artifactId>maven-antrun-plugin</artifactId>                    <versionRange>[1.7,)</versionRange>                    <goals>                      <goal>run</goal>                    </goals>                  </pluginExecutionFilter>                  <action>                    <ignore></ignore>                  </action>                </pluginExecution>                <pluginExecution>                  <pluginExecutionFilter>                    <groupId>org.apache.maven.plugins</groupId>                    <artifactId>maven-checkstyle-plugin</artifactId>                    <versionRange>[2.8,)</versionRange>                    <goals>                      <goal>check</goal>                    </goals>                  </pluginExecutionFilter>                  <action>                    <ignore></ignore>                  </action>                </pluginExecution>              </pluginExecutions>            </lifecycleMappingMetadata>          </configuration>        </plugin>      </plugins>    </pluginManagement>    <plugins>      <plugin>        <artifactId>maven-enforcer-plugin</artifactId>        <executions>          <execution>            <id>enforce-tools</id>            <goals>              <goal>enforce</goal>            </goals>            <configuration>              <rules>                <requireJavaVersion>                  <version>[1.7.0,)</version>                </requireJavaVersion>                <requireMavenVersion>                  <version>[3.0.5,)</version>                </requireMavenVersion>              </rules>            </configuration>          </execution>        </executions>      </plugin>      <plugin>        <artifactId>maven-compiler-plugin</artifactId>        <configuration>          <encoding>UTF-8</encoding>          <source>1.5</source>          <target>1.5</target>          <debug>true</debug>          <optimize>true</optimize>          <showDeprecation>true</showDeprecation>          <showWarnings>true</showWarnings>        </configuration>      </plugin>      <plugin>        <groupId>org.codehaus.mojo</groupId>        <artifactId>animal-sniffer-maven-plugin</artifactId>        <version>1.7</version>        <executions>          <execution>            <phase>process-classes</phase>            <goals>              <goal>check</goal>            </goals>          </execution>        </executions>        <configuration>          <signature>            <groupId>org.codehaus.mojo.signature</groupId>            <artifactId>java15</artifactId>            <version>1.0</version>          </signature>          <ignores>            <ignore>sun.misc.Unsafe</ignore>            <ignore>java.util.zip.Deflater</ignore>            <ignore>java.util.concurrent.LinkedTransferQueue</ignore>            <ignore>java.nio.channels.DatagramChannel</ignore>            <ignore>java.nio.channels.MembershipKey</ignore>            <ignore>java.net.StandardSocketOptions</ignore>            <ignore>java.net.StandardProtocolFamily</ignore>            <ignore>java.io.ObjectStreamClass</ignore>            <ignore>java.net.IDN</ignore>          </ignores>        </configuration>      </plugin>      <plugin>        <artifactId>maven-resources-plugin</artifactId>        <executions>          <execution>            <id>copy-legal-info</id>            <phase>validate</phase>            <goals>              <goal>copy-resources</goal>            </goals>            <configuration>              <outputDirectory>${basedir}/target/license/META-INF</outputDirectory>              <resources>                <resource>                  <directory>${basedir}</directory>                  <filtering>false</filtering>                  <includes>                    <include>LICENSE.txt</include>                    <include>NOTICE.txt</include>                    <include>license/*.txt</include>                  </includes>                </resource>              </resources>            </configuration>          </execution>        </executions>        <configuration>          <encoding>UTF-8</encoding>        </configuration>      </plugin>      <plugin>        <artifactId>maven-surefire-plugin</artifactId>        <configuration>          <forkMode>never</forkMode>          <excludes>            <exclude>**/Abstract*</exclude>            <exclude>**/TestUtil*</exclude>          </excludes>          <runOrder>random</runOrder>        </configuration>      </plugin>      <plugin>        <groupId>org.apache.felix</groupId>        <artifactId>maven-bundle-plugin</artifactId>        <extensions>true</extensions>        <configuration>          <instructions>            <Bundle-SymbolicName>org.jboss.netty</Bundle-SymbolicName>            <Bundle-DocURL>${project.url}</Bundle-DocURL>            <Bundle-Activator>org.jboss.netty.container.osgi.NettyBundleActivator</Bundle-Activator>            <Export-Package>!org.jboss.netty.example.*,              !org.jboss.netty.util.internal.*,              org.jboss.netty.*;version=${project.version}</Export-Package>            <Private-Package>org.jboss.netty.example.*,              org.jboss.netty.util.internal.*,</Private-Package>            <Import-Package>*;resolution:=optional</Import-Package>            <Eclipse-BuddyPolicy>registered</Eclipse-BuddyPolicy>            <Bundle-BuddyPolicy>registered</Bundle-BuddyPolicy>            <Main-Class>org.jboss.netty.util.Version</Main-Class>          </instructions>        </configuration>      </plugin>      <plugin>        <artifactId>maven-source-plugin</artifactId>        <executions>          <execution>            <id>attach-source</id>            <phase>package</phase>            <goals>              <goal>jar</goal>            </goals>            <configuration>              <attach>true</attach>            </configuration>          </execution>        </executions>      </plugin>      <plugin>        <artifactId>maven-antrun-plugin</artifactId>        <executions>          <execution>            <id>write-version</id>            <phase>validate</phase>            <goals>              <goal>run</goal>            </goals>            <configuration>              <tasks>                <taskdef resource="net/sf/antcontrib/antlib.xml"></taskdef>                <exec outputproperty="gitOutput" resultproperty="gitExitCode" executable="git" failonerror="false" failifexecutionfails="false">                  <arg value="log"></arg>                  <arg value="-1"></arg>                  <arg value="--format=format:%h"></arg>                </exec>                <if>                  <equals arg2="0" arg1="${gitExitCode}"></equals>                  <then>                    <property name="buildNumber" value="${gitOutput}"></property>                  </then>                  <else>                    <property name="buildNumber" value="unknown"></property>                  </else>                </if>                <echo>Build number: ${buildNumber}</echo>                <mkdir dir="${project.build.directory}"></mkdir>                <echo message="${project.version}" file="${project.build.directory}/version.txt"></echo>                <echo message="// DO NOT MODIFY - WILL BE OVERWRITTEN DURING THE BUILD PROCESS${line.separator}package org.jboss.netty.util;${line.separator}/**${line.separator} * Provides the version information of Netty.${line.separator} * @apiviz.landmark${line.separator} */${line.separator}@SuppressWarnings(&quot;all&quot;)${line.separator}public final class Version {${line.separator} /** The version identifier. */${line.separator} public static final String ID = &quot;${project.version}-${buildNumber}&quot;;${line.separator} /** Prints out the version identifier to stdout. */${line.separator} public static void main(String[] args) { System.out.println(ID); }${line.separator} private Version() { }${line.separator}}${line.separator}" file="${basedir}/src/main/java/org/jboss/netty/util/Version.java"></echo>              </tasks>            </configuration>          </execution>          <execution>            <id>remove-examples</id>            <phase>package</phase>            <goals>              <goal>run</goal>            </goals>            <configuration>              <tasks>                <taskdef resource="net/sf/antcontrib/antlib.xml"></taskdef>                <if>                  <or>                    <equals arg2="jar" arg1="${project.packaging}"></equals>                    <equals arg2="bundle" arg1="${project.packaging}"></equals>                  </or>                  <then>                    <move file="${project.build.directory}/${project.build.finalName}.jar" tofile="${project.build.directory}/${project.build.finalName}.orig.jar"></move>                    <zip destfile="${project.build.directory}/${project.build.finalName}.jar">                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}.orig.jar" dirmode="755">                        <include name="META-INF/MANIFEST.MF"></include>                      </zipfileset>                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}.orig.jar" dirmode="755">                        <exclude name="META-INF/MANIFEST.MF"></exclude>                        <exclude name="*/*/*/example/**"></exclude>                      </zipfileset>                    </zip>                    <delete file="${project.build.directory}/${project.build.finalName}.orig.jar"></delete>                    <checksum file="${project.build.directory}/${project.build.finalName}.jar" forceoverwrite="yes" algorithm="md5"></checksum>                    <checksum file="${project.build.directory}/${project.build.finalName}.jar" forceoverwrite="yes" algorithm="sha1"></checksum>                    <move file="${project.build.directory}/${project.build.finalName}-sources.jar" tofile="${project.build.directory}/${project.build.finalName}-sources.orig.jar"></move>                    <zip destfile="${project.build.directory}/${project.build.finalName}-sources.jar">                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}-sources.orig.jar" dirmode="755">                        <include name="META-INF/MANIFEST.MF"></include>                      </zipfileset>                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}-sources.orig.jar" dirmode="755">                        <exclude name="META-INF/MANIFEST.MF"></exclude>                        <exclude name="*/*/*/example/**"></exclude>                      </zipfileset>                    </zip>                    <delete file="${project.build.directory}/${project.build.finalName}-sources.orig.jar"></delete>                    <checksum file="${project.build.directory}/${project.build.finalName}-sources.jar" forceoverwrite="yes" algorithm="md5"></checksum>                    <checksum file="${project.build.directory}/${project.build.finalName}-sources.jar" forceoverwrite="yes" algorithm="sha1"></checksum>                  </then>                </if>              </tasks>            </configuration>          </execution>        </executions>        <dependencies>          <dependency>            <groupId>org.apache.ant</groupId>            <artifactId>ant</artifactId>            <version>1.8.2</version>          </dependency>          <dependency>            <groupId>org.apache.ant</groupId>            <artifactId>ant-launcher</artifactId>            <version>1.8.2</version>          </dependency>          <dependency>            <groupId>ant-contrib</groupId>            <artifactId>ant-contrib</artifactId>            <version>1.0b3</version>            <exclusions>              <exclusion>                <artifactId>ant</artifactId>                <groupId>ant</groupId>              </exclusion>            </exclusions>          </dependency>        </dependencies>      </plugin>      <plugin>        <artifactId>maven-javadoc-plugin</artifactId>        <executions>          <execution>            <id>attach-javadoc</id>            <phase>package</phase>            <goals>              <goal>jar</goal>            </goals>          </execution>        </executions>        <configuration>          <doclet>org.jboss.apiviz.APIviz</doclet>          <docletArtifact>            <groupId>org.jboss.apiviz</groupId>            <artifactId>apiviz</artifactId>            <version>1.3.2.GA</version>          </docletArtifact>          <attach>true</attach>          <javadocDirectory>${basedir}/src/javadoc</javadocDirectory>          <docfilessubdirs>true</docfilessubdirs>          <useStandardDocletOptions>true</useStandardDocletOptions>          <outputDirectory>${project.build.directory}/api</outputDirectory>          <charset>UTF-8</charset>          <docencoding>UTF-8</docencoding>          <breakiterator>true</breakiterator>          <version>false</version>          <author>false</author>          <keywords>true</keywords>          <overview>${basedir}/src/javadoc/overview.html</overview>          <doctitle>${project.name} API Reference (${project.version})</doctitle>          <windowtitle>${project.name} API Reference (${project.version})</windowtitle>          <additionalparam>-link http://docs.oracle.com/javase/7/docs/api/            -link http://code.google.com/apis/protocolbuffers/docs/reference/java/            -link http://docs.oracle.com/javaee/6/api/            -link http://www.osgi.org/javadoc/r4v43/core/            -link http://www.slf4j.org/apidocs/            -link http://commons.apache.org/logging/commons-logging-1.1.1/apidocs/            -link http://logging.apache.org/log4j/1.2/apidocs/            -group "Low-level data representation" org.jboss.netty.buffer*            -group "Central interface for all I/O operations" org.jboss.netty.channel*            -group "Client &amp; Server bootstrapping utilities" org.jboss.netty.bootstrap*            -group "Reusable I/O event interceptors" org.jboss.netty.handler*            -group "Miscellaneous" org.jboss.netty.logging*:org.jboss.netty.util*            -sourceclasspath ${project.build.outputDirectory}            -nopackagediagram</additionalparam>          <encoding>UTF-8</encoding>          <locale>en_US</locale>          <excludePackageNames>org.jboss.netty.example*:org.jboss.netty.container*:org.jboss.netty.util.internal*</excludePackageNames>        </configuration>      </plugin>      <plugin>        <artifactId>maven-jxr-plugin</artifactId>        <executions>          <execution>            <id>generate-xref</id>            <phase>package</phase>            <goals>              <goal>jxr</goal>            </goals>          </execution>        </executions>        <configuration>          <inputEncoding>UTF-8</inputEncoding>          <outputEncoding>UTF-8</outputEncoding>          <linkJavadoc>true</linkJavadoc>          <destDir>${project.build.directory}/xref</destDir>          <javadocDir>${project.build.directory}/api</javadocDir>          <docTitle>${project.name} Source Xref (${project.version})</docTitle>          <windowTitle>${project.name} Source Xref (${project.version})</windowTitle>        </configuration>      </plugin>      <plugin>        <artifactId>maven-assembly-plugin</artifactId>        <executions>          <execution>            <id>generate-distribution</id>            <phase>package</phase>            <goals>              <goal>single</goal>            </goals>          </execution>        </executions>        <configuration>          <descriptors>            <descriptor>${basedir}/src/assembly/default.xml</descriptor>          </descriptors>          <attach>${attach-distribution}</attach>          <appendAssemblyId>true</appendAssemblyId>          <tarLongFileMode>gnu</tarLongFileMode>        </configuration>      </plugin>    </plugins>  </build></project>